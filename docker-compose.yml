services:
  db:
    image: mysql:8.0
    container_name: mlp_db
    environment:
      MYSQL_DATABASE: 'mlp_db'
      MYSQL_ROOT_PASSWORD: 'mysql_pass'
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - '3306:3306'
    networks:
      - mlp_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pmysql_pass"]
      timeout: 10s
      retries: 10
      interval: 30s

  admin:
    build: 
      context: ./admin
      dockerfile: Dockerfile
    container_name: mlp_admin
    environment:
      SECRET_KEY: 'django-insecure-your-secret-key-here'
      DEBUG: 'True'
      ALLOWED_HOSTS: 'localhost,127.0.0.1,0.0.0.0'
      MYSQL_HOST: 'db'
      MYSQL_DB: 'mlp_db'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'mysql_pass'
      MYSQL_PORT: '3306'
      TIME_ZONE: 'Asia/Tokyo'
      TOKEN_LIFETIME: '7'
      CORS_ORIGIN_WHITELIST: 'http://localhost:3000,http://127.0.0.1:3000'
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
    networks:
      - mlp_network
    volumes:
      - ./admin:/app
    command: >
      sh -c "
        echo 'Waiting for MySQL to be ready...' &&
        while ! nc -z db 3306; do sleep 1; done &&
        echo 'MySQL is ready!' &&
        python manage.py migrate &&
        python manage.py create_superuser &&
        python manage.py seed_locations &&
        python manage.py seed_features &&
        python run.py runserver 0.0.0.0:8080
      "

  ai-ameasure:
    build: 
      context: ./microservices/ai_ameasure
      dockerfile: Dockerfile
    container_name: mlp_ai_ameasure
    environment:
      MYSQL_HOST: 'db'
      MYSQL_DB: 'mlp_db'
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: 'mysql_pass'
      MYSQL_PORT: '3306'
      DATA_FOLDER: '/app/data'
      OUTPUT_FOLDER: '/app/output'
      ENVIRONMENT: 'production'
      DEBUG: 'False'
    ports:
      - '8000:8000'
    depends_on:
      - db
    networks:
      - mlp_network
    volumes:
      - ./data_folder:/app/data
      - ./output:/app/output
      - ./ai_ameasure/app/master:/app/app/master
      - ./ai_ameasure/gui_displacement_temporal_spacial_analysis.py:/app/gui_displacement_temporal_spacial_analysis.py
      - ./ai_ameasure/config.json:/app/config.json
    restart: unless-stopped

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: mlp_frontend
    environment:
      NODE_ENV: 'development'
      NEXT_TELEMETRY_DISABLED: '1'
      WATCHPACK_POLLING: 'true'
    ports:
      - '3000:3000'
    depends_on:
      - admin
      - ai-ameasure
    networks:
      - mlp_network
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  mysql_data:
  label_studio_data:

networks:
  mlp_network:
    driver: bridge
